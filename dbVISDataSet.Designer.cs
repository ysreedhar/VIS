//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace VendorInformationSystem {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dbVISDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dbVISDataSet : global::System.Data.DataSet {
        
        private tblFinancialStatusDataTable tabletblFinancialStatus;
        
        private tblVendorInformationDataTable tabletblVendorInformation;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dbVISDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dbVISDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tblFinancialStatus"] != null)) {
                    base.Tables.Add(new tblFinancialStatusDataTable(ds.Tables["tblFinancialStatus"]));
                }
                if ((ds.Tables["tblVendorInformation"] != null)) {
                    base.Tables.Add(new tblVendorInformationDataTable(ds.Tables["tblVendorInformation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblFinancialStatusDataTable tblFinancialStatus {
            get {
                return this.tabletblFinancialStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tblVendorInformationDataTable tblVendorInformation {
            get {
                return this.tabletblVendorInformation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dbVISDataSet cln = ((dbVISDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tblFinancialStatus"] != null)) {
                    base.Tables.Add(new tblFinancialStatusDataTable(ds.Tables["tblFinancialStatus"]));
                }
                if ((ds.Tables["tblVendorInformation"] != null)) {
                    base.Tables.Add(new tblVendorInformationDataTable(ds.Tables["tblVendorInformation"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabletblFinancialStatus = ((tblFinancialStatusDataTable)(base.Tables["tblFinancialStatus"]));
            if ((initTable == true)) {
                if ((this.tabletblFinancialStatus != null)) {
                    this.tabletblFinancialStatus.InitVars();
                }
            }
            this.tabletblVendorInformation = ((tblVendorInformationDataTable)(base.Tables["tblVendorInformation"]));
            if ((initTable == true)) {
                if ((this.tabletblVendorInformation != null)) {
                    this.tabletblVendorInformation.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dbVISDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dbVISDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletblFinancialStatus = new tblFinancialStatusDataTable();
            base.Tables.Add(this.tabletblFinancialStatus);
            this.tabletblVendorInformation = new tblVendorInformationDataTable();
            base.Tables.Add(this.tabletblVendorInformation);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblFinancialStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializetblVendorInformation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dbVISDataSet ds = new dbVISDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void tblFinancialStatusRowChangeEventHandler(object sender, tblFinancialStatusRowChangeEvent e);
        
        public delegate void tblVendorInformationRowChangeEventHandler(object sender, tblVendorInformationRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblFinancialStatusDataTable : global::System.Data.TypedTableBase<tblFinancialStatusRow> {
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnFSYear;
            
            private global::System.Data.DataColumn columnFSRevenue;
            
            private global::System.Data.DataColumn columnFSNetProfit;
            
            private global::System.Data.DataColumn columnFSShareHolderFund;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusDataTable() {
                this.TableName = "tblFinancialStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblFinancialStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblFinancialStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSYearColumn {
                get {
                    return this.columnFSYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSRevenueColumn {
                get {
                    return this.columnFSRevenue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSNetProfitColumn {
                get {
                    return this.columnFSNetProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FSShareHolderFundColumn {
                get {
                    return this.columnFSShareHolderFund;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRow this[int index] {
                get {
                    return ((tblFinancialStatusRow)(this.Rows[index]));
                }
            }
            
            public event tblFinancialStatusRowChangeEventHandler tblFinancialStatusRowChanging;
            
            public event tblFinancialStatusRowChangeEventHandler tblFinancialStatusRowChanged;
            
            public event tblFinancialStatusRowChangeEventHandler tblFinancialStatusRowDeleting;
            
            public event tblFinancialStatusRowChangeEventHandler tblFinancialStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblFinancialStatusRow(tblFinancialStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRow AddtblFinancialStatusRow(decimal VendorID, decimal FSYear, decimal FSRevenue, decimal FSNetProfit, decimal FSShareHolderFund) {
                tblFinancialStatusRow rowtblFinancialStatusRow = ((tblFinancialStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VendorID,
                        FSYear,
                        FSRevenue,
                        FSNetProfit,
                        FSShareHolderFund};
                rowtblFinancialStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblFinancialStatusRow);
                return rowtblFinancialStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRow FindByVendorID(decimal VendorID) {
                return ((tblFinancialStatusRow)(this.Rows.Find(new object[] {
                            VendorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblFinancialStatusDataTable cln = ((tblFinancialStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblFinancialStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVendorID = base.Columns["VendorID"];
                this.columnFSYear = base.Columns["FSYear"];
                this.columnFSRevenue = base.Columns["FSRevenue"];
                this.columnFSNetProfit = base.Columns["FSNetProfit"];
                this.columnFSShareHolderFund = base.Columns["FSShareHolderFund"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnFSYear = new global::System.Data.DataColumn("FSYear", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSYear);
                this.columnFSRevenue = new global::System.Data.DataColumn("FSRevenue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSRevenue);
                this.columnFSNetProfit = new global::System.Data.DataColumn("FSNetProfit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSNetProfit);
                this.columnFSShareHolderFund = new global::System.Data.DataColumn("FSShareHolderFund", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFSShareHolderFund);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVendorID}, true));
                this.columnVendorID.AllowDBNull = false;
                this.columnVendorID.Unique = true;
                this.columnFSYear.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRow NewtblFinancialStatusRow() {
                return ((tblFinancialStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblFinancialStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblFinancialStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblFinancialStatusRowChanged != null)) {
                    this.tblFinancialStatusRowChanged(this, new tblFinancialStatusRowChangeEvent(((tblFinancialStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblFinancialStatusRowChanging != null)) {
                    this.tblFinancialStatusRowChanging(this, new tblFinancialStatusRowChangeEvent(((tblFinancialStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblFinancialStatusRowDeleted != null)) {
                    this.tblFinancialStatusRowDeleted(this, new tblFinancialStatusRowChangeEvent(((tblFinancialStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblFinancialStatusRowDeleting != null)) {
                    this.tblFinancialStatusRowDeleting(this, new tblFinancialStatusRowChangeEvent(((tblFinancialStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblFinancialStatusRow(tblFinancialStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dbVISDataSet ds = new dbVISDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblFinancialStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tblVendorInformationDataTable : global::System.Data.TypedTableBase<tblVendorInformationRow> {
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnVCode;
            
            private global::System.Data.DataColumn columnVCoRegistration;
            
            private global::System.Data.DataColumn columnVNatureofBiz;
            
            private global::System.Data.DataColumn columnDateofInc;
            
            private global::System.Data.DataColumn columnRegisteredAddressl1;
            
            private global::System.Data.DataColumn columnRegisteredAddressl2;
            
            private global::System.Data.DataColumn columnRegisteredAddressl3;
            
            private global::System.Data.DataColumn columnRegisteredCountry;
            
            private global::System.Data.DataColumn columnMailingAddressl1;
            
            private global::System.Data.DataColumn columnMailingAddress2;
            
            private global::System.Data.DataColumn columnMailingAddress3;
            
            private global::System.Data.DataColumn columnMailingCountry;
            
            private global::System.Data.DataColumn columnTelephoneNo;
            
            private global::System.Data.DataColumn columnFaxNo;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnEmailAdd;
            
            private global::System.Data.DataColumn columnEqSBumi;
            
            private global::System.Data.DataColumn columnEqSNonBumi;
            
            private global::System.Data.DataColumn columnEqSForeign;
            
            private global::System.Data.DataColumn columnAuthorisedCapital;
            
            private global::System.Data.DataColumn columnPaidupCapital;
            
            private global::System.Data.DataColumn columnPetronasLicense;
            
            private global::System.Data.DataColumn columnLicenseNo;
            
            private global::System.Data.DataColumn columnValidityFrom;
            
            private global::System.Data.DataColumn columnValidityTo;
            
            private global::System.Data.DataColumn columnMOF;
            
            private global::System.Data.DataColumn columnCIDB;
            
            private global::System.Data.DataColumn columnPKK;
            
            private global::System.Data.DataColumn columnOtherLicenses;
            
            private global::System.Data.DataColumn columnt_user;
            
            private global::System.Data.DataColumn columnt_date;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationDataTable() {
                this.TableName = "tblVendorInformation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVendorInformationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected tblVendorInformationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VCodeColumn {
                get {
                    return this.columnVCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VCoRegistrationColumn {
                get {
                    return this.columnVCoRegistration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VNatureofBizColumn {
                get {
                    return this.columnVNatureofBiz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateofIncColumn {
                get {
                    return this.columnDateofInc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisteredAddressl1Column {
                get {
                    return this.columnRegisteredAddressl1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisteredAddressl2Column {
                get {
                    return this.columnRegisteredAddressl2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisteredAddressl3Column {
                get {
                    return this.columnRegisteredAddressl3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RegisteredCountryColumn {
                get {
                    return this.columnRegisteredCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddressl1Column {
                get {
                    return this.columnMailingAddressl1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddress2Column {
                get {
                    return this.columnMailingAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingAddress3Column {
                get {
                    return this.columnMailingAddress3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MailingCountryColumn {
                get {
                    return this.columnMailingCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TelephoneNoColumn {
                get {
                    return this.columnTelephoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxNoColumn {
                get {
                    return this.columnFaxNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailAddColumn {
                get {
                    return this.columnEmailAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EqSBumiColumn {
                get {
                    return this.columnEqSBumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EqSNonBumiColumn {
                get {
                    return this.columnEqSNonBumi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EqSForeignColumn {
                get {
                    return this.columnEqSForeign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AuthorisedCapitalColumn {
                get {
                    return this.columnAuthorisedCapital;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidupCapitalColumn {
                get {
                    return this.columnPaidupCapital;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PetronasLicenseColumn {
                get {
                    return this.columnPetronasLicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LicenseNoColumn {
                get {
                    return this.columnLicenseNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidityFromColumn {
                get {
                    return this.columnValidityFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidityToColumn {
                get {
                    return this.columnValidityTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOFColumn {
                get {
                    return this.columnMOF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CIDBColumn {
                get {
                    return this.columnCIDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PKKColumn {
                get {
                    return this.columnPKK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherLicensesColumn {
                get {
                    return this.columnOtherLicenses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn t_userColumn {
                get {
                    return this.columnt_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn t_dateColumn {
                get {
                    return this.columnt_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRow this[int index] {
                get {
                    return ((tblVendorInformationRow)(this.Rows[index]));
                }
            }
            
            public event tblVendorInformationRowChangeEventHandler tblVendorInformationRowChanging;
            
            public event tblVendorInformationRowChangeEventHandler tblVendorInformationRowChanged;
            
            public event tblVendorInformationRowChangeEventHandler tblVendorInformationRowDeleting;
            
            public event tblVendorInformationRowChangeEventHandler tblVendorInformationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddtblVendorInformationRow(tblVendorInformationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRow AddtblVendorInformationRow(
                        string VendorName, 
                        decimal VCode, 
                        string VCoRegistration, 
                        string VNatureofBiz, 
                        System.DateTime DateofInc, 
                        string RegisteredAddressl1, 
                        string RegisteredAddressl2, 
                        string RegisteredAddressl3, 
                        string RegisteredCountry, 
                        string MailingAddressl1, 
                        string MailingAddress2, 
                        string MailingAddress3, 
                        string MailingCountry, 
                        string TelephoneNo, 
                        string FaxNo, 
                        string ContactPerson, 
                        string EmailAdd, 
                        string EqSBumi, 
                        string EqSNonBumi, 
                        string EqSForeign, 
                        string AuthorisedCapital, 
                        byte[] PaidupCapital, 
                        string PetronasLicense, 
                        string LicenseNo, 
                        System.DateTime ValidityFrom, 
                        System.DateTime ValidityTo, 
                        bool MOF, 
                        bool CIDB, 
                        bool PKK, 
                        string OtherLicenses, 
                        string t_user, 
                        System.DateTime t_date) {
                tblVendorInformationRow rowtblVendorInformationRow = ((tblVendorInformationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VendorName,
                        VCode,
                        VCoRegistration,
                        VNatureofBiz,
                        DateofInc,
                        RegisteredAddressl1,
                        RegisteredAddressl2,
                        RegisteredAddressl3,
                        RegisteredCountry,
                        MailingAddressl1,
                        MailingAddress2,
                        MailingAddress3,
                        MailingCountry,
                        TelephoneNo,
                        FaxNo,
                        ContactPerson,
                        EmailAdd,
                        EqSBumi,
                        EqSNonBumi,
                        EqSForeign,
                        AuthorisedCapital,
                        PaidupCapital,
                        PetronasLicense,
                        LicenseNo,
                        ValidityFrom,
                        ValidityTo,
                        MOF,
                        CIDB,
                        PKK,
                        OtherLicenses,
                        t_user,
                        t_date};
                rowtblVendorInformationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtblVendorInformationRow);
                return rowtblVendorInformationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRow FindByVendorID(decimal VendorID) {
                return ((tblVendorInformationRow)(this.Rows.Find(new object[] {
                            VendorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                tblVendorInformationDataTable cln = ((tblVendorInformationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tblVendorInformationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVendorID = base.Columns["VendorID"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnVCode = base.Columns["VCode"];
                this.columnVCoRegistration = base.Columns["VCoRegistration"];
                this.columnVNatureofBiz = base.Columns["VNatureofBiz"];
                this.columnDateofInc = base.Columns["DateofInc"];
                this.columnRegisteredAddressl1 = base.Columns["RegisteredAddressl1"];
                this.columnRegisteredAddressl2 = base.Columns["RegisteredAddressl2"];
                this.columnRegisteredAddressl3 = base.Columns["RegisteredAddressl3"];
                this.columnRegisteredCountry = base.Columns["RegisteredCountry"];
                this.columnMailingAddressl1 = base.Columns["MailingAddressl1"];
                this.columnMailingAddress2 = base.Columns["MailingAddress2"];
                this.columnMailingAddress3 = base.Columns["MailingAddress3"];
                this.columnMailingCountry = base.Columns["MailingCountry"];
                this.columnTelephoneNo = base.Columns["TelephoneNo"];
                this.columnFaxNo = base.Columns["FaxNo"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnEmailAdd = base.Columns["EmailAdd"];
                this.columnEqSBumi = base.Columns["EqSBumi"];
                this.columnEqSNonBumi = base.Columns["EqSNonBumi"];
                this.columnEqSForeign = base.Columns["EqSForeign"];
                this.columnAuthorisedCapital = base.Columns["AuthorisedCapital"];
                this.columnPaidupCapital = base.Columns["PaidupCapital"];
                this.columnPetronasLicense = base.Columns["PetronasLicense"];
                this.columnLicenseNo = base.Columns["LicenseNo"];
                this.columnValidityFrom = base.Columns["ValidityFrom"];
                this.columnValidityTo = base.Columns["ValidityTo"];
                this.columnMOF = base.Columns["MOF"];
                this.columnCIDB = base.Columns["CIDB"];
                this.columnPKK = base.Columns["PKK"];
                this.columnOtherLicenses = base.Columns["OtherLicenses"];
                this.columnt_user = base.Columns["t_user"];
                this.columnt_date = base.Columns["t_date"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnVCode = new global::System.Data.DataColumn("VCode", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVCode);
                this.columnVCoRegistration = new global::System.Data.DataColumn("VCoRegistration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVCoRegistration);
                this.columnVNatureofBiz = new global::System.Data.DataColumn("VNatureofBiz", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVNatureofBiz);
                this.columnDateofInc = new global::System.Data.DataColumn("DateofInc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateofInc);
                this.columnRegisteredAddressl1 = new global::System.Data.DataColumn("RegisteredAddressl1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisteredAddressl1);
                this.columnRegisteredAddressl2 = new global::System.Data.DataColumn("RegisteredAddressl2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisteredAddressl2);
                this.columnRegisteredAddressl3 = new global::System.Data.DataColumn("RegisteredAddressl3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisteredAddressl3);
                this.columnRegisteredCountry = new global::System.Data.DataColumn("RegisteredCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegisteredCountry);
                this.columnMailingAddressl1 = new global::System.Data.DataColumn("MailingAddressl1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddressl1);
                this.columnMailingAddress2 = new global::System.Data.DataColumn("MailingAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddress2);
                this.columnMailingAddress3 = new global::System.Data.DataColumn("MailingAddress3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingAddress3);
                this.columnMailingCountry = new global::System.Data.DataColumn("MailingCountry", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMailingCountry);
                this.columnTelephoneNo = new global::System.Data.DataColumn("TelephoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephoneNo);
                this.columnFaxNo = new global::System.Data.DataColumn("FaxNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaxNo);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnEmailAdd = new global::System.Data.DataColumn("EmailAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmailAdd);
                this.columnEqSBumi = new global::System.Data.DataColumn("EqSBumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqSBumi);
                this.columnEqSNonBumi = new global::System.Data.DataColumn("EqSNonBumi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqSNonBumi);
                this.columnEqSForeign = new global::System.Data.DataColumn("EqSForeign", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEqSForeign);
                this.columnAuthorisedCapital = new global::System.Data.DataColumn("AuthorisedCapital", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorisedCapital);
                this.columnPaidupCapital = new global::System.Data.DataColumn("PaidupCapital", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidupCapital);
                this.columnPetronasLicense = new global::System.Data.DataColumn("PetronasLicense", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPetronasLicense);
                this.columnLicenseNo = new global::System.Data.DataColumn("LicenseNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseNo);
                this.columnValidityFrom = new global::System.Data.DataColumn("ValidityFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityFrom);
                this.columnValidityTo = new global::System.Data.DataColumn("ValidityTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityTo);
                this.columnMOF = new global::System.Data.DataColumn("MOF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOF);
                this.columnCIDB = new global::System.Data.DataColumn("CIDB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCIDB);
                this.columnPKK = new global::System.Data.DataColumn("PKK", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPKK);
                this.columnOtherLicenses = new global::System.Data.DataColumn("OtherLicenses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherLicenses);
                this.columnt_user = new global::System.Data.DataColumn("t_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_user);
                this.columnt_date = new global::System.Data.DataColumn("t_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnt_date);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVendorID}, true));
                this.columnVendorID.AutoIncrement = true;
                this.columnVendorID.AutoIncrementSeed = -1;
                this.columnVendorID.AutoIncrementStep = -1;
                this.columnVendorID.AllowDBNull = false;
                this.columnVendorID.ReadOnly = true;
                this.columnVendorID.Unique = true;
                this.columnVendorName.AllowDBNull = false;
                this.columnVendorName.MaxLength = 50;
                this.columnVCode.AllowDBNull = false;
                this.columnVCoRegistration.AllowDBNull = false;
                this.columnVCoRegistration.MaxLength = 50;
                this.columnVNatureofBiz.AllowDBNull = false;
                this.columnVNatureofBiz.MaxLength = 150;
                this.columnRegisteredAddressl1.AllowDBNull = false;
                this.columnRegisteredAddressl1.MaxLength = 50;
                this.columnRegisteredAddressl2.MaxLength = 50;
                this.columnRegisteredAddressl3.MaxLength = 50;
                this.columnRegisteredCountry.AllowDBNull = false;
                this.columnRegisteredCountry.MaxLength = 50;
                this.columnMailingAddressl1.MaxLength = 50;
                this.columnMailingAddress2.MaxLength = 50;
                this.columnMailingAddress3.MaxLength = 50;
                this.columnMailingCountry.MaxLength = 50;
                this.columnTelephoneNo.AllowDBNull = false;
                this.columnTelephoneNo.MaxLength = 50;
                this.columnFaxNo.AllowDBNull = false;
                this.columnFaxNo.MaxLength = 50;
                this.columnContactPerson.MaxLength = 50;
                this.columnEmailAdd.MaxLength = 50;
                this.columnEqSBumi.MaxLength = 50;
                this.columnEqSNonBumi.MaxLength = 50;
                this.columnEqSForeign.MaxLength = 50;
                this.columnAuthorisedCapital.MaxLength = 50;
                this.columnPetronasLicense.MaxLength = 50;
                this.columnLicenseNo.MaxLength = 50;
                this.columnOtherLicenses.MaxLength = 50;
                this.columnt_user.AllowDBNull = false;
                this.columnt_user.MaxLength = 50;
                this.columnt_date.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRow NewtblVendorInformationRow() {
                return ((tblVendorInformationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tblVendorInformationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(tblVendorInformationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tblVendorInformationRowChanged != null)) {
                    this.tblVendorInformationRowChanged(this, new tblVendorInformationRowChangeEvent(((tblVendorInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tblVendorInformationRowChanging != null)) {
                    this.tblVendorInformationRowChanging(this, new tblVendorInformationRowChangeEvent(((tblVendorInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tblVendorInformationRowDeleted != null)) {
                    this.tblVendorInformationRowDeleted(this, new tblVendorInformationRowChangeEvent(((tblVendorInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tblVendorInformationRowDeleting != null)) {
                    this.tblVendorInformationRowDeleting(this, new tblVendorInformationRowChangeEvent(((tblVendorInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovetblVendorInformationRow(tblVendorInformationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dbVISDataSet ds = new dbVISDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tblVendorInformationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblFinancialStatusRow : global::System.Data.DataRow {
            
            private tblFinancialStatusDataTable tabletblFinancialStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblFinancialStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblFinancialStatus = ((tblFinancialStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VendorID {
                get {
                    return ((decimal)(this[this.tabletblFinancialStatus.VendorIDColumn]));
                }
                set {
                    this[this.tabletblFinancialStatus.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FSYear {
                get {
                    return ((decimal)(this[this.tabletblFinancialStatus.FSYearColumn]));
                }
                set {
                    this[this.tabletblFinancialStatus.FSYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FSRevenue {
                get {
                    try {
                        return ((decimal)(this[this.tabletblFinancialStatus.FSRevenueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSRevenue\' in table \'tblFinancialStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblFinancialStatus.FSRevenueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FSNetProfit {
                get {
                    try {
                        return ((decimal)(this[this.tabletblFinancialStatus.FSNetProfitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSNetProfit\' in table \'tblFinancialStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblFinancialStatus.FSNetProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FSShareHolderFund {
                get {
                    try {
                        return ((decimal)(this[this.tabletblFinancialStatus.FSShareHolderFundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FSShareHolderFund\' in table \'tblFinancialStatus\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblFinancialStatus.FSShareHolderFundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSRevenueNull() {
                return this.IsNull(this.tabletblFinancialStatus.FSRevenueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSRevenueNull() {
                this[this.tabletblFinancialStatus.FSRevenueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSNetProfitNull() {
                return this.IsNull(this.tabletblFinancialStatus.FSNetProfitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSNetProfitNull() {
                this[this.tabletblFinancialStatus.FSNetProfitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFSShareHolderFundNull() {
                return this.IsNull(this.tabletblFinancialStatus.FSShareHolderFundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFSShareHolderFundNull() {
                this[this.tabletblFinancialStatus.FSShareHolderFundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class tblVendorInformationRow : global::System.Data.DataRow {
            
            private tblVendorInformationDataTable tabletblVendorInformation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal tblVendorInformationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletblVendorInformation = ((tblVendorInformationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VendorID {
                get {
                    return ((decimal)(this[this.tabletblVendorInformation.VendorIDColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    return ((string)(this[this.tabletblVendorInformation.VendorNameColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VCode {
                get {
                    return ((decimal)(this[this.tabletblVendorInformation.VCodeColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.VCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VCoRegistration {
                get {
                    return ((string)(this[this.tabletblVendorInformation.VCoRegistrationColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.VCoRegistrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VNatureofBiz {
                get {
                    return ((string)(this[this.tabletblVendorInformation.VNatureofBizColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.VNatureofBizColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateofInc {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblVendorInformation.DateofIncColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateofInc\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.DateofIncColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisteredAddressl1 {
                get {
                    return ((string)(this[this.tabletblVendorInformation.RegisteredAddressl1Column]));
                }
                set {
                    this[this.tabletblVendorInformation.RegisteredAddressl1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisteredAddressl2 {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.RegisteredAddressl2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegisteredAddressl2\' in table \'tblVendorInformation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.RegisteredAddressl2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisteredAddressl3 {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.RegisteredAddressl3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegisteredAddressl3\' in table \'tblVendorInformation\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.RegisteredAddressl3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RegisteredCountry {
                get {
                    return ((string)(this[this.tabletblVendorInformation.RegisteredCountryColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.RegisteredCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddressl1 {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.MailingAddressl1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailingAddressl1\' in table \'tblVendorInformation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.MailingAddressl1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddress2 {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.MailingAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailingAddress2\' in table \'tblVendorInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.MailingAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingAddress3 {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.MailingAddress3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailingAddress3\' in table \'tblVendorInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.MailingAddress3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MailingCountry {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.MailingCountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MailingCountry\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.MailingCountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TelephoneNo {
                get {
                    return ((string)(this[this.tabletblVendorInformation.TelephoneNoColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.TelephoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FaxNo {
                get {
                    return ((string)(this[this.tabletblVendorInformation.FaxNoColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.FaxNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmailAdd {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.EmailAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmailAdd\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.EmailAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EqSBumi {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.EqSBumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EqSBumi\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.EqSBumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EqSNonBumi {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.EqSNonBumiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EqSNonBumi\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.EqSNonBumiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EqSForeign {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.EqSForeignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EqSForeign\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.EqSForeignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorisedCapital {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.AuthorisedCapitalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuthorisedCapital\' in table \'tblVendorInformation\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.AuthorisedCapitalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] PaidupCapital {
                get {
                    try {
                        return ((byte[])(this[this.tabletblVendorInformation.PaidupCapitalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidupCapital\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.PaidupCapitalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PetronasLicense {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.PetronasLicenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PetronasLicense\' in table \'tblVendorInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.PetronasLicenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LicenseNo {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.LicenseNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LicenseNo\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.LicenseNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ValidityFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblVendorInformation.ValidityFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidityFrom\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.ValidityFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ValidityTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletblVendorInformation.ValidityToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidityTo\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.ValidityToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MOF {
                get {
                    try {
                        return ((bool)(this[this.tabletblVendorInformation.MOFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOF\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.MOFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool CIDB {
                get {
                    try {
                        return ((bool)(this[this.tabletblVendorInformation.CIDBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CIDB\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.CIDBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool PKK {
                get {
                    try {
                        return ((bool)(this[this.tabletblVendorInformation.PKKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PKK\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.PKKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherLicenses {
                get {
                    try {
                        return ((string)(this[this.tabletblVendorInformation.OtherLicensesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherLicenses\' in table \'tblVendorInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabletblVendorInformation.OtherLicensesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string t_user {
                get {
                    return ((string)(this[this.tabletblVendorInformation.t_userColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.t_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime t_date {
                get {
                    return ((global::System.DateTime)(this[this.tabletblVendorInformation.t_dateColumn]));
                }
                set {
                    this[this.tabletblVendorInformation.t_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateofIncNull() {
                return this.IsNull(this.tabletblVendorInformation.DateofIncColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateofIncNull() {
                this[this.tabletblVendorInformation.DateofIncColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegisteredAddressl2Null() {
                return this.IsNull(this.tabletblVendorInformation.RegisteredAddressl2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegisteredAddressl2Null() {
                this[this.tabletblVendorInformation.RegisteredAddressl2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRegisteredAddressl3Null() {
                return this.IsNull(this.tabletblVendorInformation.RegisteredAddressl3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRegisteredAddressl3Null() {
                this[this.tabletblVendorInformation.RegisteredAddressl3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddressl1Null() {
                return this.IsNull(this.tabletblVendorInformation.MailingAddressl1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddressl1Null() {
                this[this.tabletblVendorInformation.MailingAddressl1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddress2Null() {
                return this.IsNull(this.tabletblVendorInformation.MailingAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddress2Null() {
                this[this.tabletblVendorInformation.MailingAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingAddress3Null() {
                return this.IsNull(this.tabletblVendorInformation.MailingAddress3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingAddress3Null() {
                this[this.tabletblVendorInformation.MailingAddress3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMailingCountryNull() {
                return this.IsNull(this.tabletblVendorInformation.MailingCountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMailingCountryNull() {
                this[this.tabletblVendorInformation.MailingCountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tabletblVendorInformation.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tabletblVendorInformation.ContactPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailAddNull() {
                return this.IsNull(this.tabletblVendorInformation.EmailAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailAddNull() {
                this[this.tabletblVendorInformation.EmailAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqSBumiNull() {
                return this.IsNull(this.tabletblVendorInformation.EqSBumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqSBumiNull() {
                this[this.tabletblVendorInformation.EqSBumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqSNonBumiNull() {
                return this.IsNull(this.tabletblVendorInformation.EqSNonBumiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqSNonBumiNull() {
                this[this.tabletblVendorInformation.EqSNonBumiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEqSForeignNull() {
                return this.IsNull(this.tabletblVendorInformation.EqSForeignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEqSForeignNull() {
                this[this.tabletblVendorInformation.EqSForeignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorisedCapitalNull() {
                return this.IsNull(this.tabletblVendorInformation.AuthorisedCapitalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorisedCapitalNull() {
                this[this.tabletblVendorInformation.AuthorisedCapitalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidupCapitalNull() {
                return this.IsNull(this.tabletblVendorInformation.PaidupCapitalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidupCapitalNull() {
                this[this.tabletblVendorInformation.PaidupCapitalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPetronasLicenseNull() {
                return this.IsNull(this.tabletblVendorInformation.PetronasLicenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPetronasLicenseNull() {
                this[this.tabletblVendorInformation.PetronasLicenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLicenseNoNull() {
                return this.IsNull(this.tabletblVendorInformation.LicenseNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLicenseNoNull() {
                this[this.tabletblVendorInformation.LicenseNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidityFromNull() {
                return this.IsNull(this.tabletblVendorInformation.ValidityFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidityFromNull() {
                this[this.tabletblVendorInformation.ValidityFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidityToNull() {
                return this.IsNull(this.tabletblVendorInformation.ValidityToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidityToNull() {
                this[this.tabletblVendorInformation.ValidityToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOFNull() {
                return this.IsNull(this.tabletblVendorInformation.MOFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOFNull() {
                this[this.tabletblVendorInformation.MOFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCIDBNull() {
                return this.IsNull(this.tabletblVendorInformation.CIDBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCIDBNull() {
                this[this.tabletblVendorInformation.CIDBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPKKNull() {
                return this.IsNull(this.tabletblVendorInformation.PKKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPKKNull() {
                this[this.tabletblVendorInformation.PKKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherLicensesNull() {
                return this.IsNull(this.tabletblVendorInformation.OtherLicensesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherLicensesNull() {
                this[this.tabletblVendorInformation.OtherLicensesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblFinancialStatusRowChangeEvent : global::System.EventArgs {
            
            private tblFinancialStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRowChangeEvent(tblFinancialStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblFinancialStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class tblVendorInformationRowChangeEvent : global::System.EventArgs {
            
            private tblVendorInformationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRowChangeEvent(tblVendorInformationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public tblVendorInformationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace VendorInformationSystem.dbVISDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblFinancialStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblFinancialStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblFinancialStatus";
            tableMapping.ColumnMappings.Add("VendorID", "VendorID");
            tableMapping.ColumnMappings.Add("FSYear", "FSYear");
            tableMapping.ColumnMappings.Add("FSRevenue", "FSRevenue");
            tableMapping.ColumnMappings.Add("FSNetProfit", "FSNetProfit");
            tableMapping.ColumnMappings.Add("FSShareHolderFund", "FSShareHolderFund");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[tblFinancialStatus] WHERE (([VendorID] = @Original_VendorID) AND ([FSYear] = @Original_FSYear) AND ((@IsNull_FSRevenue = 1 AND [FSRevenue] IS NULL) OR ([FSRevenue] = @Original_FSRevenue)) AND ((@IsNull_FSNetProfit = 1 AND [FSNetProfit] IS NULL) OR ([FSNetProfit] = @Original_FSNetProfit)) AND ((@IsNull_FSShareHolderFund = 1 AND [FSShareHolderFund] IS NULL) OR ([FSShareHolderFund] = @Original_FSShareHolderFund)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSYear", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSRevenue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSRevenue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSRevenue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSRevenue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSNetProfit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSNetProfit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSNetProfit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSNetProfit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSShareHolderFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSShareHolderFund", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tblFinancialStatus] ([VendorID], [FSYear], [FSRevenue], [FSNetProfit], [FSShareHolderFund]) VALUES (@VendorID, @FSYear, @FSRevenue, @FSNetProfit, @FSShareHolderFund);
SELECT VendorID, FSYear, FSRevenue, FSNetProfit, FSShareHolderFund FROM tblFinancialStatus WHERE (VendorID = @VendorID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSYear", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSRevenue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSRevenue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSNetProfit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSNetProfit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSShareHolderFund", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[tblFinancialStatus] SET [VendorID] = @VendorID, [FSYear] = @FSYear, [FSRevenue] = @FSRevenue, [FSNetProfit] = @FSNetProfit, [FSShareHolderFund] = @FSShareHolderFund WHERE (([VendorID] = @Original_VendorID) AND ([FSYear] = @Original_FSYear) AND ((@IsNull_FSRevenue = 1 AND [FSRevenue] IS NULL) OR ([FSRevenue] = @Original_FSRevenue)) AND ((@IsNull_FSNetProfit = 1 AND [FSNetProfit] IS NULL) OR ([FSNetProfit] = @Original_FSNetProfit)) AND ((@IsNull_FSShareHolderFund = 1 AND [FSShareHolderFund] IS NULL) OR ([FSShareHolderFund] = @Original_FSShareHolderFund)));
SELECT VendorID, FSYear, FSRevenue, FSNetProfit, FSShareHolderFund FROM tblFinancialStatus WHERE (VendorID = @VendorID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSYear", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSRevenue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSRevenue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSNetProfit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSNetProfit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FSShareHolderFund", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSYear", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSRevenue", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSRevenue", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSRevenue", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSRevenue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSNetProfit", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSNetProfit", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSNetProfit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSNetProfit", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FSShareHolderFund", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FSShareHolderFund", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "FSShareHolderFund", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::VendorInformationSystem.Properties.Settings.Default.dbVISConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT VendorID, FSYear, FSRevenue, FSNetProfit, FSShareHolderFund FROM dbo.tblFi" +
                "nancialStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dbVISDataSet.tblFinancialStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dbVISDataSet.tblFinancialStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dbVISDataSet.tblFinancialStatusDataTable dataTable = new dbVISDataSet.tblFinancialStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dbVISDataSet.tblFinancialStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dbVISDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblFinancialStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_VendorID, decimal Original_FSYear, global::System.Nullable<decimal> Original_FSRevenue, global::System.Nullable<decimal> Original_FSNetProfit, global::System.Nullable<decimal> Original_FSShareHolderFund) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_VendorID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_FSYear));
            if ((Original_FSRevenue.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_FSRevenue.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_FSNetProfit.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_FSNetProfit.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_FSShareHolderFund.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_FSShareHolderFund.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal VendorID, decimal FSYear, global::System.Nullable<decimal> FSRevenue, global::System.Nullable<decimal> FSNetProfit, global::System.Nullable<decimal> FSShareHolderFund) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(VendorID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(FSYear));
            if ((FSRevenue.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(FSRevenue.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FSNetProfit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(FSNetProfit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FSShareHolderFund.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(FSShareHolderFund.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal VendorID, decimal FSYear, global::System.Nullable<decimal> FSRevenue, global::System.Nullable<decimal> FSNetProfit, global::System.Nullable<decimal> FSShareHolderFund, decimal Original_VendorID, decimal Original_FSYear, global::System.Nullable<decimal> Original_FSRevenue, global::System.Nullable<decimal> Original_FSNetProfit, global::System.Nullable<decimal> Original_FSShareHolderFund) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(VendorID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(FSYear));
            if ((FSRevenue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(FSRevenue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FSNetProfit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(FSNetProfit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FSShareHolderFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(FSShareHolderFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_VendorID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_FSYear));
            if ((Original_FSRevenue.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_FSRevenue.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_FSNetProfit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_FSNetProfit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_FSShareHolderFund.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_FSShareHolderFund.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal FSYear, global::System.Nullable<decimal> FSRevenue, global::System.Nullable<decimal> FSNetProfit, global::System.Nullable<decimal> FSShareHolderFund, decimal Original_VendorID, decimal Original_FSYear, global::System.Nullable<decimal> Original_FSRevenue, global::System.Nullable<decimal> Original_FSNetProfit, global::System.Nullable<decimal> Original_FSShareHolderFund) {
            return this.Update(Original_VendorID, FSYear, FSRevenue, FSNetProfit, FSShareHolderFund, Original_VendorID, Original_FSYear, Original_FSRevenue, Original_FSNetProfit, Original_FSShareHolderFund);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tblVendorInformationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public tblVendorInformationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tblVendorInformation";
            tableMapping.ColumnMappings.Add("VendorID", "VendorID");
            tableMapping.ColumnMappings.Add("VendorName", "VendorName");
            tableMapping.ColumnMappings.Add("VCode", "VCode");
            tableMapping.ColumnMappings.Add("VCoRegistration", "VCoRegistration");
            tableMapping.ColumnMappings.Add("VNatureofBiz", "VNatureofBiz");
            tableMapping.ColumnMappings.Add("DateofInc", "DateofInc");
            tableMapping.ColumnMappings.Add("RegisteredAddressl1", "RegisteredAddressl1");
            tableMapping.ColumnMappings.Add("RegisteredAddressl2", "RegisteredAddressl2");
            tableMapping.ColumnMappings.Add("RegisteredAddressl3", "RegisteredAddressl3");
            tableMapping.ColumnMappings.Add("RegisteredCountry", "RegisteredCountry");
            tableMapping.ColumnMappings.Add("MailingAddressl1", "MailingAddressl1");
            tableMapping.ColumnMappings.Add("MailingAddress2", "MailingAddress2");
            tableMapping.ColumnMappings.Add("MailingAddress3", "MailingAddress3");
            tableMapping.ColumnMappings.Add("MailingCountry", "MailingCountry");
            tableMapping.ColumnMappings.Add("TelephoneNo", "TelephoneNo");
            tableMapping.ColumnMappings.Add("FaxNo", "FaxNo");
            tableMapping.ColumnMappings.Add("ContactPerson", "ContactPerson");
            tableMapping.ColumnMappings.Add("EmailAdd", "EmailAdd");
            tableMapping.ColumnMappings.Add("EqSBumi", "EqSBumi");
            tableMapping.ColumnMappings.Add("EqSNonBumi", "EqSNonBumi");
            tableMapping.ColumnMappings.Add("EqSForeign", "EqSForeign");
            tableMapping.ColumnMappings.Add("AuthorisedCapital", "AuthorisedCapital");
            tableMapping.ColumnMappings.Add("PaidupCapital", "PaidupCapital");
            tableMapping.ColumnMappings.Add("PetronasLicense", "PetronasLicense");
            tableMapping.ColumnMappings.Add("LicenseNo", "LicenseNo");
            tableMapping.ColumnMappings.Add("ValidityFrom", "ValidityFrom");
            tableMapping.ColumnMappings.Add("ValidityTo", "ValidityTo");
            tableMapping.ColumnMappings.Add("MOF", "MOF");
            tableMapping.ColumnMappings.Add("CIDB", "CIDB");
            tableMapping.ColumnMappings.Add("PKK", "PKK");
            tableMapping.ColumnMappings.Add("OtherLicenses", "OtherLicenses");
            tableMapping.ColumnMappings.Add("t_user", "t_user");
            tableMapping.ColumnMappings.Add("t_date", "t_date");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[tblVendorInformation] WHERE (([VendorID] = @Original_VendorID)" +
                " AND ([VendorName] = @Original_VendorName) AND ([VCode] = @Original_VCode) AND (" +
                "[VCoRegistration] = @Original_VCoRegistration) AND ([VNatureofBiz] = @Original_V" +
                "NatureofBiz) AND ((@IsNull_DateofInc = 1 AND [DateofInc] IS NULL) OR ([DateofInc" +
                "] = @Original_DateofInc)) AND ([RegisteredAddressl1] = @Original_RegisteredAddre" +
                "ssl1) AND ((@IsNull_RegisteredAddressl2 = 1 AND [RegisteredAddressl2] IS NULL) O" +
                "R ([RegisteredAddressl2] = @Original_RegisteredAddressl2)) AND ((@IsNull_Registe" +
                "redAddressl3 = 1 AND [RegisteredAddressl3] IS NULL) OR ([RegisteredAddressl3] = " +
                "@Original_RegisteredAddressl3)) AND ([RegisteredCountry] = @Original_RegisteredC" +
                "ountry) AND ((@IsNull_MailingAddressl1 = 1 AND [MailingAddressl1] IS NULL) OR ([" +
                "MailingAddressl1] = @Original_MailingAddressl1)) AND ((@IsNull_MailingAddress2 =" +
                " 1 AND [MailingAddress2] IS NULL) OR ([MailingAddress2] = @Original_MailingAddre" +
                "ss2)) AND ((@IsNull_MailingAddress3 = 1 AND [MailingAddress3] IS NULL) OR ([Mail" +
                "ingAddress3] = @Original_MailingAddress3)) AND ((@IsNull_MailingCountry = 1 AND " +
                "[MailingCountry] IS NULL) OR ([MailingCountry] = @Original_MailingCountry)) AND " +
                "([TelephoneNo] = @Original_TelephoneNo) AND ([FaxNo] = @Original_FaxNo) AND ((@I" +
                "sNull_ContactPerson = 1 AND [ContactPerson] IS NULL) OR ([ContactPerson] = @Orig" +
                "inal_ContactPerson)) AND ((@IsNull_EmailAdd = 1 AND [EmailAdd] IS NULL) OR ([Ema" +
                "ilAdd] = @Original_EmailAdd)) AND ((@IsNull_EqSBumi = 1 AND [EqSBumi] IS NULL) O" +
                "R ([EqSBumi] = @Original_EqSBumi)) AND ((@IsNull_EqSNonBumi = 1 AND [EqSNonBumi]" +
                " IS NULL) OR ([EqSNonBumi] = @Original_EqSNonBumi)) AND ((@IsNull_EqSForeign = 1" +
                " AND [EqSForeign] IS NULL) OR ([EqSForeign] = @Original_EqSForeign)) AND ((@IsNu" +
                "ll_AuthorisedCapital = 1 AND [AuthorisedCapital] IS NULL) OR ([AuthorisedCapital" +
                "] = @Original_AuthorisedCapital)) AND ((@IsNull_PaidupCapital = 1 AND [PaidupCap" +
                "ital] IS NULL) OR ([PaidupCapital] = @Original_PaidupCapital)) AND ((@IsNull_Pet" +
                "ronasLicense = 1 AND [PetronasLicense] IS NULL) OR ([PetronasLicense] = @Origina" +
                "l_PetronasLicense)) AND ((@IsNull_LicenseNo = 1 AND [LicenseNo] IS NULL) OR ([Li" +
                "censeNo] = @Original_LicenseNo)) AND ((@IsNull_ValidityFrom = 1 AND [ValidityFro" +
                "m] IS NULL) OR ([ValidityFrom] = @Original_ValidityFrom)) AND ((@IsNull_Validity" +
                "To = 1 AND [ValidityTo] IS NULL) OR ([ValidityTo] = @Original_ValidityTo)) AND (" +
                "(@IsNull_MOF = 1 AND [MOF] IS NULL) OR ([MOF] = @Original_MOF)) AND ((@IsNull_CI" +
                "DB = 1 AND [CIDB] IS NULL) OR ([CIDB] = @Original_CIDB)) AND ((@IsNull_PKK = 1 A" +
                "ND [PKK] IS NULL) OR ([PKK] = @Original_PKK)) AND ((@IsNull_OtherLicenses = 1 AN" +
                "D [OtherLicenses] IS NULL) OR ([OtherLicenses] = @Original_OtherLicenses)) AND (" +
                "[t_user] = @Original_t_user) AND ([t_date] = @Original_t_date))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VCode", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VCoRegistration", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VCoRegistration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VNatureofBiz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VNatureofBiz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateofInc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateofInc", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RegisteredAddressl2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RegisteredAddressl3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddressl1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddress2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddress2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddress3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddress3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingCountry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TelephoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TelephoneNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaxNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContactPerson", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmailAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmailAdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSBumi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSNonBumi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSNonBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSForeign", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSForeign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AuthorisedCapital", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AuthorisedCapital", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidupCapital", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidupCapital", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PetronasLicense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PetronasLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LicenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LicenseNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIDB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIDB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PKK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PKK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherLicenses", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherLicenses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_t_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_t_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[tblVendorInformation] ([VendorName], [VCode], [VCoRegistration], [VNatureofBiz], [DateofInc], [RegisteredAddressl1], [RegisteredAddressl2], [RegisteredAddressl3], [RegisteredCountry], [MailingAddressl1], [MailingAddress2], [MailingAddress3], [MailingCountry], [TelephoneNo], [FaxNo], [ContactPerson], [EmailAdd], [EqSBumi], [EqSNonBumi], [EqSForeign], [AuthorisedCapital], [PaidupCapital], [PetronasLicense], [LicenseNo], [ValidityFrom], [ValidityTo], [MOF], [CIDB], [PKK], [OtherLicenses], [t_user], [t_date]) VALUES (@VendorName, @VCode, @VCoRegistration, @VNatureofBiz, @DateofInc, @RegisteredAddressl1, @RegisteredAddressl2, @RegisteredAddressl3, @RegisteredCountry, @MailingAddressl1, @MailingAddress2, @MailingAddress3, @MailingCountry, @TelephoneNo, @FaxNo, @ContactPerson, @EmailAdd, @EqSBumi, @EqSNonBumi, @EqSForeign, @AuthorisedCapital, @PaidupCapital, @PetronasLicense, @LicenseNo, @ValidityFrom, @ValidityTo, @MOF, @CIDB, @PKK, @OtherLicenses, @t_user, @t_date);
SELECT VendorID, VendorName, VCode, VCoRegistration, VNatureofBiz, DateofInc, RegisteredAddressl1, RegisteredAddressl2, RegisteredAddressl3, RegisteredCountry, MailingAddressl1, MailingAddress2, MailingAddress3, MailingCountry, TelephoneNo, FaxNo, ContactPerson, EmailAdd, EqSBumi, EqSNonBumi, EqSForeign, AuthorisedCapital, PaidupCapital, PetronasLicense, LicenseNo, ValidityFrom, ValidityTo, MOF, CIDB, PKK, OtherLicenses, t_user, t_date FROM tblVendorInformation WHERE (VendorID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VCode", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VCoRegistration", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VCoRegistration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VNatureofBiz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VNatureofBiz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofInc", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddress2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddress3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TelephoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TelephoneNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaxNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmailAdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSNonBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSForeign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AuthorisedCapital", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidupCapital", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PetronasLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LicenseNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIDB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PKK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherLicenses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@t_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@t_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[tblVendorInformation] SET [VendorName] = @VendorName, [VCode] = @VC" +
                "ode, [VCoRegistration] = @VCoRegistration, [VNatureofBiz] = @VNatureofBiz, [Date" +
                "ofInc] = @DateofInc, [RegisteredAddressl1] = @RegisteredAddressl1, [RegisteredAd" +
                "dressl2] = @RegisteredAddressl2, [RegisteredAddressl3] = @RegisteredAddressl3, [" +
                "RegisteredCountry] = @RegisteredCountry, [MailingAddressl1] = @MailingAddressl1," +
                " [MailingAddress2] = @MailingAddress2, [MailingAddress3] = @MailingAddress3, [Ma" +
                "ilingCountry] = @MailingCountry, [TelephoneNo] = @TelephoneNo, [FaxNo] = @FaxNo," +
                " [ContactPerson] = @ContactPerson, [EmailAdd] = @EmailAdd, [EqSBumi] = @EqSBumi," +
                " [EqSNonBumi] = @EqSNonBumi, [EqSForeign] = @EqSForeign, [AuthorisedCapital] = @" +
                "AuthorisedCapital, [PaidupCapital] = @PaidupCapital, [PetronasLicense] = @Petron" +
                "asLicense, [LicenseNo] = @LicenseNo, [ValidityFrom] = @ValidityFrom, [ValidityTo" +
                "] = @ValidityTo, [MOF] = @MOF, [CIDB] = @CIDB, [PKK] = @PKK, [OtherLicenses] = @" +
                "OtherLicenses, [t_user] = @t_user, [t_date] = @t_date WHERE (([VendorID] = @Orig" +
                "inal_VendorID) AND ([VendorName] = @Original_VendorName) AND ([VCode] = @Origina" +
                "l_VCode) AND ([VCoRegistration] = @Original_VCoRegistration) AND ([VNatureofBiz]" +
                " = @Original_VNatureofBiz) AND ((@IsNull_DateofInc = 1 AND [DateofInc] IS NULL) " +
                "OR ([DateofInc] = @Original_DateofInc)) AND ([RegisteredAddressl1] = @Original_R" +
                "egisteredAddressl1) AND ((@IsNull_RegisteredAddressl2 = 1 AND [RegisteredAddress" +
                "l2] IS NULL) OR ([RegisteredAddressl2] = @Original_RegisteredAddressl2)) AND ((@" +
                "IsNull_RegisteredAddressl3 = 1 AND [RegisteredAddressl3] IS NULL) OR ([Registere" +
                "dAddressl3] = @Original_RegisteredAddressl3)) AND ([RegisteredCountry] = @Origin" +
                "al_RegisteredCountry) AND ((@IsNull_MailingAddressl1 = 1 AND [MailingAddressl1] " +
                "IS NULL) OR ([MailingAddressl1] = @Original_MailingAddressl1)) AND ((@IsNull_Mai" +
                "lingAddress2 = 1 AND [MailingAddress2] IS NULL) OR ([MailingAddress2] = @Origina" +
                "l_MailingAddress2)) AND ((@IsNull_MailingAddress3 = 1 AND [MailingAddress3] IS N" +
                "ULL) OR ([MailingAddress3] = @Original_MailingAddress3)) AND ((@IsNull_MailingCo" +
                "untry = 1 AND [MailingCountry] IS NULL) OR ([MailingCountry] = @Original_Mailing" +
                "Country)) AND ([TelephoneNo] = @Original_TelephoneNo) AND ([FaxNo] = @Original_F" +
                "axNo) AND ((@IsNull_ContactPerson = 1 AND [ContactPerson] IS NULL) OR ([ContactP" +
                "erson] = @Original_ContactPerson)) AND ((@IsNull_EmailAdd = 1 AND [EmailAdd] IS " +
                "NULL) OR ([EmailAdd] = @Original_EmailAdd)) AND ((@IsNull_EqSBumi = 1 AND [EqSBu" +
                "mi] IS NULL) OR ([EqSBumi] = @Original_EqSBumi)) AND ((@IsNull_EqSNonBumi = 1 AN" +
                "D [EqSNonBumi] IS NULL) OR ([EqSNonBumi] = @Original_EqSNonBumi)) AND ((@IsNull_" +
                "EqSForeign = 1 AND [EqSForeign] IS NULL) OR ([EqSForeign] = @Original_EqSForeign" +
                ")) AND ((@IsNull_AuthorisedCapital = 1 AND [AuthorisedCapital] IS NULL) OR ([Aut" +
                "horisedCapital] = @Original_AuthorisedCapital)) AND ((@IsNull_PaidupCapital = 1 " +
                "AND [PaidupCapital] IS NULL) OR ([PaidupCapital] = @Original_PaidupCapital)) AND" +
                " ((@IsNull_PetronasLicense = 1 AND [PetronasLicense] IS NULL) OR ([PetronasLicen" +
                "se] = @Original_PetronasLicense)) AND ((@IsNull_LicenseNo = 1 AND [LicenseNo] IS" +
                " NULL) OR ([LicenseNo] = @Original_LicenseNo)) AND ((@IsNull_ValidityFrom = 1 AN" +
                "D [ValidityFrom] IS NULL) OR ([ValidityFrom] = @Original_ValidityFrom)) AND ((@I" +
                "sNull_ValidityTo = 1 AND [ValidityTo] IS NULL) OR ([ValidityTo] = @Original_Vali" +
                "dityTo)) AND ((@IsNull_MOF = 1 AND [MOF] IS NULL) OR ([MOF] = @Original_MOF)) AN" +
                "D ((@IsNull_CIDB = 1 AND [CIDB] IS NULL) OR ([CIDB] = @Original_CIDB)) AND ((@Is" +
                "Null_PKK = 1 AND [PKK] IS NULL) OR ([PKK] = @Original_PKK)) AND ((@IsNull_OtherL" +
                "icenses = 1 AND [OtherLicenses] IS NULL) OR ([OtherLicenses] = @Original_OtherLi" +
                "censes)) AND ([t_user] = @Original_t_user) AND ([t_date] = @Original_t_date));\r\n" +
                "SELECT VendorID, VendorName, VCode, VCoRegistration, VNatureofBiz, DateofInc, Re" +
                "gisteredAddressl1, RegisteredAddressl2, RegisteredAddressl3, RegisteredCountry, " +
                "MailingAddressl1, MailingAddress2, MailingAddress3, MailingCountry, TelephoneNo," +
                " FaxNo, ContactPerson, EmailAdd, EqSBumi, EqSNonBumi, EqSForeign, AuthorisedCapi" +
                "tal, PaidupCapital, PetronasLicense, LicenseNo, ValidityFrom, ValidityTo, MOF, C" +
                "IDB, PKK, OtherLicenses, t_user, t_date FROM tblVendorInformation WHERE (VendorI" +
                "D = @VendorID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VCode", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VCoRegistration", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VCoRegistration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VNatureofBiz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VNatureofBiz", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateofInc", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredAddressl3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RegisteredCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddress2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingAddress3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MailingCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TelephoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TelephoneNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FaxNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmailAdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSNonBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EqSForeign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AuthorisedCapital", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PaidupCapital", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PetronasLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LicenseNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ValidityTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CIDB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PKK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherLicenses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@t_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@t_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VendorName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VendorName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VCode", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "VCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VCoRegistration", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VCoRegistration", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VNatureofBiz", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VNatureofBiz", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateofInc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateofInc", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateofInc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RegisteredAddressl2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RegisteredAddressl3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredAddressl3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredAddressl3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RegisteredCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RegisteredCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddressl1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddressl1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddressl1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddress2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddress2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingAddress3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingAddress3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingAddress3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MailingCountry", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MailingCountry", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MailingCountry", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TelephoneNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TelephoneNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FaxNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FaxNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContactPerson", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContactPerson", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContactPerson", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EmailAdd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EmailAdd", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EmailAdd", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSBumi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSBumi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSNonBumi", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSNonBumi", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSNonBumi", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EqSForeign", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EqSForeign", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EqSForeign", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AuthorisedCapital", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AuthorisedCapital", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AuthorisedCapital", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PaidupCapital", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PaidupCapital", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PaidupCapital", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PetronasLicense", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PetronasLicense", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PetronasLicense", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LicenseNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LicenseNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LicenseNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ValidityTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ValidityTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ValidityTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MOF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MOF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MOF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CIDB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CIDB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CIDB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PKK", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PKK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PKK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OtherLicenses", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherLicenses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherLicenses", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_t_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_t_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "t_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VendorID", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 18, 0, "VendorID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::VendorInformationSystem.Properties.Settings.Default.dbVISConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT VendorID, VendorName, VCode, VCoRegistration, VNatureofBiz, DateofInc, RegisteredAddressl1, RegisteredAddressl2, RegisteredAddressl3, RegisteredCountry, MailingAddressl1, MailingAddress2, MailingAddress3, MailingCountry, TelephoneNo, FaxNo, ContactPerson, EmailAdd, EqSBumi, EqSNonBumi, EqSForeign, AuthorisedCapital, PaidupCapital, PetronasLicense, LicenseNo, ValidityFrom, ValidityTo, MOF, CIDB, PKK, OtherLicenses, t_user, t_date FROM dbo.tblVendorInformation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dbVISDataSet.tblVendorInformationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dbVISDataSet.tblVendorInformationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dbVISDataSet.tblVendorInformationDataTable dataTable = new dbVISDataSet.tblVendorInformationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dbVISDataSet.tblVendorInformationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dbVISDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tblVendorInformation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_VendorID, 
                    string Original_VendorName, 
                    decimal Original_VCode, 
                    string Original_VCoRegistration, 
                    string Original_VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> Original_DateofInc, 
                    string Original_RegisteredAddressl1, 
                    string Original_RegisteredAddressl2, 
                    string Original_RegisteredAddressl3, 
                    string Original_RegisteredCountry, 
                    string Original_MailingAddressl1, 
                    string Original_MailingAddress2, 
                    string Original_MailingAddress3, 
                    string Original_MailingCountry, 
                    string Original_TelephoneNo, 
                    string Original_FaxNo, 
                    string Original_ContactPerson, 
                    string Original_EmailAdd, 
                    string Original_EqSBumi, 
                    string Original_EqSNonBumi, 
                    string Original_EqSForeign, 
                    string Original_AuthorisedCapital, 
                    byte[] Original_PaidupCapital, 
                    string Original_PetronasLicense, 
                    string Original_LicenseNo, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityTo, 
                    global::System.Nullable<bool> Original_MOF, 
                    global::System.Nullable<bool> Original_CIDB, 
                    global::System.Nullable<bool> Original_PKK, 
                    string Original_OtherLicenses, 
                    string Original_t_user, 
                    System.DateTime Original_t_date) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_VendorID));
            if ((Original_VendorName == null)) {
                throw new global::System.ArgumentNullException("Original_VendorName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_VendorName));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_VCode));
            if ((Original_VCoRegistration == null)) {
                throw new global::System.ArgumentNullException("Original_VCoRegistration");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_VCoRegistration));
            }
            if ((Original_VNatureofBiz == null)) {
                throw new global::System.ArgumentNullException("Original_VNatureofBiz");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_VNatureofBiz));
            }
            if ((Original_DateofInc.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateofInc.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_RegisteredAddressl1 == null)) {
                throw new global::System.ArgumentNullException("Original_RegisteredAddressl1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_RegisteredAddressl1));
            }
            if ((Original_RegisteredAddressl2 == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_RegisteredAddressl2));
            }
            if ((Original_RegisteredAddressl3 == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_RegisteredAddressl3));
            }
            if ((Original_RegisteredCountry == null)) {
                throw new global::System.ArgumentNullException("Original_RegisteredCountry");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_RegisteredCountry));
            }
            if ((Original_MailingAddressl1 == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_MailingAddressl1));
            }
            if ((Original_MailingAddress2 == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_MailingAddress2));
            }
            if ((Original_MailingAddress3 == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_MailingAddress3));
            }
            if ((Original_MailingCountry == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_MailingCountry));
            }
            if ((Original_TelephoneNo == null)) {
                throw new global::System.ArgumentNullException("Original_TelephoneNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_TelephoneNo));
            }
            if ((Original_FaxNo == null)) {
                throw new global::System.ArgumentNullException("Original_FaxNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_FaxNo));
            }
            if ((Original_ContactPerson == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_ContactPerson));
            }
            if ((Original_EmailAdd == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_EmailAdd));
            }
            if ((Original_EqSBumi == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_EqSBumi));
            }
            if ((Original_EqSNonBumi == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_EqSNonBumi));
            }
            if ((Original_EqSForeign == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_EqSForeign));
            }
            if ((Original_AuthorisedCapital == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_AuthorisedCapital));
            }
            if ((Original_PaidupCapital == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((byte[])(Original_PaidupCapital));
            }
            if ((Original_PetronasLicense == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_PetronasLicense));
            }
            if ((Original_LicenseNo == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_LicenseNo));
            }
            if ((Original_ValidityFrom.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_ValidityFrom.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ValidityTo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_ValidityTo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_MOF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_MOF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_CIDB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((bool)(Original_CIDB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_PKK.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((bool)(Original_PKK.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherLicenses == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_OtherLicenses));
            }
            if ((Original_t_user == null)) {
                throw new global::System.ArgumentNullException("Original_t_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_t_user));
            }
            this.Adapter.DeleteCommand.Parameters[54].Value = ((System.DateTime)(Original_t_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string VendorName, 
                    decimal VCode, 
                    string VCoRegistration, 
                    string VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> DateofInc, 
                    string RegisteredAddressl1, 
                    string RegisteredAddressl2, 
                    string RegisteredAddressl3, 
                    string RegisteredCountry, 
                    string MailingAddressl1, 
                    string MailingAddress2, 
                    string MailingAddress3, 
                    string MailingCountry, 
                    string TelephoneNo, 
                    string FaxNo, 
                    string ContactPerson, 
                    string EmailAdd, 
                    string EqSBumi, 
                    string EqSNonBumi, 
                    string EqSForeign, 
                    string AuthorisedCapital, 
                    byte[] PaidupCapital, 
                    string PetronasLicense, 
                    string LicenseNo, 
                    global::System.Nullable<global::System.DateTime> ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> ValidityTo, 
                    global::System.Nullable<bool> MOF, 
                    global::System.Nullable<bool> CIDB, 
                    global::System.Nullable<bool> PKK, 
                    string OtherLicenses, 
                    string t_user, 
                    System.DateTime t_date) {
            if ((VendorName == null)) {
                throw new global::System.ArgumentNullException("VendorName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(VendorName));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(VCode));
            if ((VCoRegistration == null)) {
                throw new global::System.ArgumentNullException("VCoRegistration");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(VCoRegistration));
            }
            if ((VNatureofBiz == null)) {
                throw new global::System.ArgumentNullException("VNatureofBiz");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(VNatureofBiz));
            }
            if ((DateofInc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateofInc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RegisteredAddressl1 == null)) {
                throw new global::System.ArgumentNullException("RegisteredAddressl1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RegisteredAddressl1));
            }
            if ((RegisteredAddressl2 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(RegisteredAddressl2));
            }
            if ((RegisteredAddressl3 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(RegisteredAddressl3));
            }
            if ((RegisteredCountry == null)) {
                throw new global::System.ArgumentNullException("RegisteredCountry");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(RegisteredCountry));
            }
            if ((MailingAddressl1 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(MailingAddressl1));
            }
            if ((MailingAddress2 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(MailingAddress2));
            }
            if ((MailingAddress3 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(MailingAddress3));
            }
            if ((MailingCountry == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(MailingCountry));
            }
            if ((TelephoneNo == null)) {
                throw new global::System.ArgumentNullException("TelephoneNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TelephoneNo));
            }
            if ((FaxNo == null)) {
                throw new global::System.ArgumentNullException("FaxNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(FaxNo));
            }
            if ((ContactPerson == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ContactPerson));
            }
            if ((EmailAdd == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(EmailAdd));
            }
            if ((EqSBumi == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(EqSBumi));
            }
            if ((EqSNonBumi == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(EqSNonBumi));
            }
            if ((EqSForeign == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(EqSForeign));
            }
            if ((AuthorisedCapital == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(AuthorisedCapital));
            }
            if ((PaidupCapital == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((byte[])(PaidupCapital));
            }
            if ((PetronasLicense == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PetronasLicense));
            }
            if ((LicenseNo == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(LicenseNo));
            }
            if ((ValidityFrom.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(ValidityFrom.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ValidityTo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(ValidityTo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MOF.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(MOF.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIDB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(CIDB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PKK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(PKK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OtherLicenses == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(OtherLicenses));
            }
            if ((t_user == null)) {
                throw new global::System.ArgumentNullException("t_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(t_user));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(t_date));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VendorName, 
                    decimal VCode, 
                    string VCoRegistration, 
                    string VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> DateofInc, 
                    string RegisteredAddressl1, 
                    string RegisteredAddressl2, 
                    string RegisteredAddressl3, 
                    string RegisteredCountry, 
                    string MailingAddressl1, 
                    string MailingAddress2, 
                    string MailingAddress3, 
                    string MailingCountry, 
                    string TelephoneNo, 
                    string FaxNo, 
                    string ContactPerson, 
                    string EmailAdd, 
                    string EqSBumi, 
                    string EqSNonBumi, 
                    string EqSForeign, 
                    string AuthorisedCapital, 
                    byte[] PaidupCapital, 
                    string PetronasLicense, 
                    string LicenseNo, 
                    global::System.Nullable<global::System.DateTime> ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> ValidityTo, 
                    global::System.Nullable<bool> MOF, 
                    global::System.Nullable<bool> CIDB, 
                    global::System.Nullable<bool> PKK, 
                    string OtherLicenses, 
                    string t_user, 
                    System.DateTime t_date, 
                    decimal Original_VendorID, 
                    string Original_VendorName, 
                    decimal Original_VCode, 
                    string Original_VCoRegistration, 
                    string Original_VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> Original_DateofInc, 
                    string Original_RegisteredAddressl1, 
                    string Original_RegisteredAddressl2, 
                    string Original_RegisteredAddressl3, 
                    string Original_RegisteredCountry, 
                    string Original_MailingAddressl1, 
                    string Original_MailingAddress2, 
                    string Original_MailingAddress3, 
                    string Original_MailingCountry, 
                    string Original_TelephoneNo, 
                    string Original_FaxNo, 
                    string Original_ContactPerson, 
                    string Original_EmailAdd, 
                    string Original_EqSBumi, 
                    string Original_EqSNonBumi, 
                    string Original_EqSForeign, 
                    string Original_AuthorisedCapital, 
                    byte[] Original_PaidupCapital, 
                    string Original_PetronasLicense, 
                    string Original_LicenseNo, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityTo, 
                    global::System.Nullable<bool> Original_MOF, 
                    global::System.Nullable<bool> Original_CIDB, 
                    global::System.Nullable<bool> Original_PKK, 
                    string Original_OtherLicenses, 
                    string Original_t_user, 
                    System.DateTime Original_t_date, 
                    decimal VendorID) {
            if ((VendorName == null)) {
                throw new global::System.ArgumentNullException("VendorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(VendorName));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(VCode));
            if ((VCoRegistration == null)) {
                throw new global::System.ArgumentNullException("VCoRegistration");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(VCoRegistration));
            }
            if ((VNatureofBiz == null)) {
                throw new global::System.ArgumentNullException("VNatureofBiz");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(VNatureofBiz));
            }
            if ((DateofInc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateofInc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RegisteredAddressl1 == null)) {
                throw new global::System.ArgumentNullException("RegisteredAddressl1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(RegisteredAddressl1));
            }
            if ((RegisteredAddressl2 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(RegisteredAddressl2));
            }
            if ((RegisteredAddressl3 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(RegisteredAddressl3));
            }
            if ((RegisteredCountry == null)) {
                throw new global::System.ArgumentNullException("RegisteredCountry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(RegisteredCountry));
            }
            if ((MailingAddressl1 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(MailingAddressl1));
            }
            if ((MailingAddress2 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(MailingAddress2));
            }
            if ((MailingAddress3 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(MailingAddress3));
            }
            if ((MailingCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(MailingCountry));
            }
            if ((TelephoneNo == null)) {
                throw new global::System.ArgumentNullException("TelephoneNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TelephoneNo));
            }
            if ((FaxNo == null)) {
                throw new global::System.ArgumentNullException("FaxNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(FaxNo));
            }
            if ((ContactPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ContactPerson));
            }
            if ((EmailAdd == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(EmailAdd));
            }
            if ((EqSBumi == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(EqSBumi));
            }
            if ((EqSNonBumi == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(EqSNonBumi));
            }
            if ((EqSForeign == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(EqSForeign));
            }
            if ((AuthorisedCapital == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(AuthorisedCapital));
            }
            if ((PaidupCapital == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((byte[])(PaidupCapital));
            }
            if ((PetronasLicense == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PetronasLicense));
            }
            if ((LicenseNo == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(LicenseNo));
            }
            if ((ValidityFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(ValidityFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((ValidityTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(ValidityTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((MOF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(MOF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((CIDB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(CIDB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PKK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(PKK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((OtherLicenses == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(OtherLicenses));
            }
            if ((t_user == null)) {
                throw new global::System.ArgumentNullException("t_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(t_user));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(t_date));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_VendorID));
            if ((Original_VendorName == null)) {
                throw new global::System.ArgumentNullException("Original_VendorName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_VendorName));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_VCode));
            if ((Original_VCoRegistration == null)) {
                throw new global::System.ArgumentNullException("Original_VCoRegistration");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_VCoRegistration));
            }
            if ((Original_VNatureofBiz == null)) {
                throw new global::System.ArgumentNullException("Original_VNatureofBiz");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_VNatureofBiz));
            }
            if ((Original_DateofInc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_DateofInc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_RegisteredAddressl1 == null)) {
                throw new global::System.ArgumentNullException("Original_RegisteredAddressl1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_RegisteredAddressl1));
            }
            if ((Original_RegisteredAddressl2 == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_RegisteredAddressl2));
            }
            if ((Original_RegisteredAddressl3 == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_RegisteredAddressl3));
            }
            if ((Original_RegisteredCountry == null)) {
                throw new global::System.ArgumentNullException("Original_RegisteredCountry");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_RegisteredCountry));
            }
            if ((Original_MailingAddressl1 == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_MailingAddressl1));
            }
            if ((Original_MailingAddress2 == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_MailingAddress2));
            }
            if ((Original_MailingAddress3 == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_MailingAddress3));
            }
            if ((Original_MailingCountry == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_MailingCountry));
            }
            if ((Original_TelephoneNo == null)) {
                throw new global::System.ArgumentNullException("Original_TelephoneNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_TelephoneNo));
            }
            if ((Original_FaxNo == null)) {
                throw new global::System.ArgumentNullException("Original_FaxNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(Original_FaxNo));
            }
            if ((Original_ContactPerson == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ContactPerson));
            }
            if ((Original_EmailAdd == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_EmailAdd));
            }
            if ((Original_EqSBumi == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_EqSBumi));
            }
            if ((Original_EqSNonBumi == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_EqSNonBumi));
            }
            if ((Original_EqSForeign == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_EqSForeign));
            }
            if ((Original_AuthorisedCapital == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_AuthorisedCapital));
            }
            if ((Original_PaidupCapital == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((byte[])(Original_PaidupCapital));
            }
            if ((Original_PetronasLicense == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_PetronasLicense));
            }
            if ((Original_LicenseNo == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_LicenseNo));
            }
            if ((Original_ValidityFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_ValidityFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_ValidityTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((System.DateTime)(Original_ValidityTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_MOF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((bool)(Original_MOF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_CIDB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((bool)(Original_CIDB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_PKK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((bool)(Original_PKK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_OtherLicenses == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_OtherLicenses));
            }
            if ((Original_t_user == null)) {
                throw new global::System.ArgumentNullException("Original_t_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Original_t_user));
            }
            this.Adapter.UpdateCommand.Parameters[86].Value = ((System.DateTime)(Original_t_date));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(VendorID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string VendorName, 
                    decimal VCode, 
                    string VCoRegistration, 
                    string VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> DateofInc, 
                    string RegisteredAddressl1, 
                    string RegisteredAddressl2, 
                    string RegisteredAddressl3, 
                    string RegisteredCountry, 
                    string MailingAddressl1, 
                    string MailingAddress2, 
                    string MailingAddress3, 
                    string MailingCountry, 
                    string TelephoneNo, 
                    string FaxNo, 
                    string ContactPerson, 
                    string EmailAdd, 
                    string EqSBumi, 
                    string EqSNonBumi, 
                    string EqSForeign, 
                    string AuthorisedCapital, 
                    byte[] PaidupCapital, 
                    string PetronasLicense, 
                    string LicenseNo, 
                    global::System.Nullable<global::System.DateTime> ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> ValidityTo, 
                    global::System.Nullable<bool> MOF, 
                    global::System.Nullable<bool> CIDB, 
                    global::System.Nullable<bool> PKK, 
                    string OtherLicenses, 
                    string t_user, 
                    System.DateTime t_date, 
                    decimal Original_VendorID, 
                    string Original_VendorName, 
                    decimal Original_VCode, 
                    string Original_VCoRegistration, 
                    string Original_VNatureofBiz, 
                    global::System.Nullable<global::System.DateTime> Original_DateofInc, 
                    string Original_RegisteredAddressl1, 
                    string Original_RegisteredAddressl2, 
                    string Original_RegisteredAddressl3, 
                    string Original_RegisteredCountry, 
                    string Original_MailingAddressl1, 
                    string Original_MailingAddress2, 
                    string Original_MailingAddress3, 
                    string Original_MailingCountry, 
                    string Original_TelephoneNo, 
                    string Original_FaxNo, 
                    string Original_ContactPerson, 
                    string Original_EmailAdd, 
                    string Original_EqSBumi, 
                    string Original_EqSNonBumi, 
                    string Original_EqSForeign, 
                    string Original_AuthorisedCapital, 
                    byte[] Original_PaidupCapital, 
                    string Original_PetronasLicense, 
                    string Original_LicenseNo, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityFrom, 
                    global::System.Nullable<global::System.DateTime> Original_ValidityTo, 
                    global::System.Nullable<bool> Original_MOF, 
                    global::System.Nullable<bool> Original_CIDB, 
                    global::System.Nullable<bool> Original_PKK, 
                    string Original_OtherLicenses, 
                    string Original_t_user, 
                    System.DateTime Original_t_date) {
            return this.Update(VendorName, VCode, VCoRegistration, VNatureofBiz, DateofInc, RegisteredAddressl1, RegisteredAddressl2, RegisteredAddressl3, RegisteredCountry, MailingAddressl1, MailingAddress2, MailingAddress3, MailingCountry, TelephoneNo, FaxNo, ContactPerson, EmailAdd, EqSBumi, EqSNonBumi, EqSForeign, AuthorisedCapital, PaidupCapital, PetronasLicense, LicenseNo, ValidityFrom, ValidityTo, MOF, CIDB, PKK, OtherLicenses, t_user, t_date, Original_VendorID, Original_VendorName, Original_VCode, Original_VCoRegistration, Original_VNatureofBiz, Original_DateofInc, Original_RegisteredAddressl1, Original_RegisteredAddressl2, Original_RegisteredAddressl3, Original_RegisteredCountry, Original_MailingAddressl1, Original_MailingAddress2, Original_MailingAddress3, Original_MailingCountry, Original_TelephoneNo, Original_FaxNo, Original_ContactPerson, Original_EmailAdd, Original_EqSBumi, Original_EqSNonBumi, Original_EqSForeign, Original_AuthorisedCapital, Original_PaidupCapital, Original_PetronasLicense, Original_LicenseNo, Original_ValidityFrom, Original_ValidityTo, Original_MOF, Original_CIDB, Original_PKK, Original_OtherLicenses, Original_t_user, Original_t_date, Original_VendorID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tblFinancialStatusTableAdapter _tblFinancialStatusTableAdapter;
        
        private tblVendorInformationTableAdapter _tblVendorInformationTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tblFinancialStatusTableAdapter tblFinancialStatusTableAdapter {
            get {
                return this._tblFinancialStatusTableAdapter;
            }
            set {
                this._tblFinancialStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public tblVendorInformationTableAdapter tblVendorInformationTableAdapter {
            get {
                return this._tblVendorInformationTableAdapter;
            }
            set {
                this._tblVendorInformationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tblFinancialStatusTableAdapter != null) 
                            && (this._tblFinancialStatusTableAdapter.Connection != null))) {
                    return this._tblFinancialStatusTableAdapter.Connection;
                }
                if (((this._tblVendorInformationTableAdapter != null) 
                            && (this._tblVendorInformationTableAdapter.Connection != null))) {
                    return this._tblVendorInformationTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tblFinancialStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tblVendorInformationTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(dbVISDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblVendorInformationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblVendorInformation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblVendorInformationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tblFinancialStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tblFinancialStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tblFinancialStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(dbVISDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tblVendorInformationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblVendorInformation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblVendorInformationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tblFinancialStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tblFinancialStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tblFinancialStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(dbVISDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tblFinancialStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblFinancialStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblFinancialStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tblVendorInformationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tblVendorInformation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tblVendorInformationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(dbVISDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tblFinancialStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblFinancialStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tblVendorInformationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tblVendorInformationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tblFinancialStatusTableAdapter != null)) {
                    revertConnections.Add(this._tblFinancialStatusTableAdapter, this._tblFinancialStatusTableAdapter.Connection);
                    this._tblFinancialStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblFinancialStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblFinancialStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblFinancialStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblFinancialStatusTableAdapter.Adapter);
                    }
                }
                if ((this._tblVendorInformationTableAdapter != null)) {
                    revertConnections.Add(this._tblVendorInformationTableAdapter, this._tblVendorInformationTableAdapter.Connection);
                    this._tblVendorInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tblVendorInformationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tblVendorInformationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tblVendorInformationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tblVendorInformationTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tblFinancialStatusTableAdapter != null)) {
                    this._tblFinancialStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblFinancialStatusTableAdapter]));
                    this._tblFinancialStatusTableAdapter.Transaction = null;
                }
                if ((this._tblVendorInformationTableAdapter != null)) {
                    this._tblVendorInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tblVendorInformationTableAdapter]));
                    this._tblVendorInformationTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591